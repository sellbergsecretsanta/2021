{"version":3,"sources":["constants/apiContants.js","components/Header/Header.js","components/LoginForm/LoginForm.js","components/Textarea/Textarea.js","components/Home/Home.js","utils/PrivateRoute.js","components/AlertComponent/AlertComponent.js","App.js","serviceWorker.js","index.js"],"names":["API_BASE_URL","ACCESS_TOKEN_NAME","withRouter","props","react_default","a","createElement","className","localStorage","getItem","location","pathname","onClick","removeItem","history","push","renderLogout","_useState","useState","username","password","successMessage","_useState2","Object","slicedToArray","state","setState","_useState3","_useState4","wishlistUpdated","setWishlistUpdated","useEffect","getUsers","handleChange","e","_e$target","target","id","value","prevState","objectSpread","defineProperty","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","axios","get","then","response","tempArr","data","forEach","p","lastUpdated","wishlist","moment","format","name","sort","b","Date","catch","error","console","log","stop","apply","this","arguments","redirectToHome","updateTitle","Fragment","htmlFor","type","aria-describedby","placeholder","onChange","preventDefault","payload","status","user","find","x","trim","toLowerCase","showError","token","setItem","style","display","role","length","map","index","key","Textarea","wishlistText","setWishlistText","Form","Group","controlId","Label","concat","Control","as","rows","disabled","isSaving","Button","onSaveWishlist","undefined","currentUser","setCurrentUser","secretSanta","setSecretSanta","_useState5","_useState6","setIsSaving","redirectToLogin","getCurrentUser","parseInt","secretsanta","abrupt","sent","updateUserData","updatedUsers","put","saveWishlist","_ref2","_callee2","text","oldUsers","_context2","_x","handleRandomize","_ref3","_callee3","users","_randomize","successful","_context3","randomize","usersCopy","toConsumableArray","arr1","slice","arr2","Math","random","user1","pop","user2","shift","partner","Textarea_Textarea","window","confirm","PrivateRoute","children","rest","objectWithoutProperties","react_router","assign","render","to","from","AlertComponent","modalDisplay","toggleDisplay","closeModal","hideError","errorMessage","aria-label","aria-hidden","App","title","updateErrorMessage","react_router_dom","basename","Header_Header","path","exact","components_LoginForm_LoginForm","utils_PrivateRoute","Home_Home","components_AlertComponent_AlertComponent","Boolean","hostname","match","ReactDOM","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b71185c7.chunk.js","sourcesContent":["/*export const API_BASE_URL = process.env.REACT_APP_SERVER_URL;*/\r\nexport const API_BASE_URL = 'https://api.jsonbin.io/b';\r\nexport const ACCESS_TOKEN_NAME = 'login_access_token';","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { ACCESS_TOKEN_NAME } from '../../constants/apiContants';\r\n\r\nfunction Header(props) {\r\n/*     const capitalize = (s) => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    } */\r\n\r\n    function renderLogout() {\r\n        if(props.location.pathname === '/home'){\r\n            return(\r\n                <button className=\"btn btn-danger\" onClick={() => handleLogout()}>Logga ut</button>\r\n            )\r\n        }\r\n    }\r\n\r\n    function handleLogout() {\r\n        localStorage.removeItem(ACCESS_TOKEN_NAME)\r\n        props.history.push('/')\r\n    }\r\n\r\n    return(\r\n        <nav className=\"navbar navbar-dark bg-dark-blue\">\r\n            <div className=\"row col-12 d-flex text-white\">\r\n                <span className=\"h3\">\r\n                    {localStorage.getItem(ACCESS_TOKEN_NAME) ? \"Secret Santa\" : \"Login\"}\r\n                </span>\r\n                <div className=\"ml-auto\">\r\n                    {renderLogout()}\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default withRouter(Header);","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\nimport './LoginForm.css';\r\nimport { ACCESS_TOKEN_NAME, API_BASE_URL } from '../../constants/apiContants';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction LoginForm(props) {\r\n    const [state , setState] = useState({\r\n        username : \"\",\r\n        password : \"\",\r\n        successMessage: null\r\n    })\r\n\r\n    const [wishlistUpdated, setWishlistUpdated] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const handleChange = (e) => {\r\n        const {id , value} = e.target\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id] : value\r\n        }))\r\n    }\r\n\r\n    const handleSubmitClick = (e) => {\r\n        e.preventDefault();\r\n        const payload={\r\n            \"username\":state.username,\r\n            \"password\":state.password,\r\n        }\r\n\r\n        axios.get(API_BASE_URL + \"/619bead00ddbee6f8b104f1b\")\r\n            .then(function (response) {\r\n                if(response.status === 200){\r\n                    let user = response.data.find(x => x.username === payload.username.trim().toLowerCase());\r\n\r\n                    if (!user) {\r\n                        props.showError(\"Username does not exists\");\r\n                    }\r\n                    else if (user && user.password !== payload.password) {\r\n                        props.showError(\"Username and password do not match\");\r\n                    }\r\n                    else {\r\n                        setState(prevState => ({\r\n                            ...prevState,\r\n                            'successMessage' : 'Login successful. Redirecting to home page..'\r\n                        }))\r\n                        let token = user.id;\r\n                        localStorage.setItem(ACCESS_TOKEN_NAME,token);\r\n                        redirectToHome();\r\n                        props.showError(null)\r\n                    }\r\n                }\r\n                else{\r\n                    props.showError(\"Something went wrong\");\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const getUsers = async () => {\r\n        axios.get(API_BASE_URL + \"/619beb2f62ed886f91531862/latest\")\r\n            .then(function (response) {\r\n                let tempArr = [];\r\n\r\n                response.data.forEach(p => {\r\n                    if (p.lastUpdated && p.wishlist !== \"\") {\r\n                        tempArr.push({lastUpdated: moment(p.lastUpdated).format(\"YYYY-MM-DD kk:mm\"), name: p.name});\r\n                    }\r\n                });\r\n\r\n                setWishlistUpdated(tempArr.sort((a, b) => new Date(b.lastUpdated) - new Date(a.lastUpdated)));\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const redirectToHome = () => {\r\n        props.updateTitle('Home')\r\n        props.history.push('/home');\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className=\"card col-md-6 col-sm-12 login-card p-3 mt-2 hv-center\">\r\n                <form>\r\n                    <div className=\"form-group text-left\">\r\n                    <label htmlFor=\"exampleInputUsername1\">Användarnamn</label>\r\n                    <input type=\"username\"\r\n                           className=\"form-control\"\r\n                           id=\"username\"\r\n                           aria-describedby=\"usernameHelp\"\r\n                           placeholder=\"Skriv användarnamn\"\r\n                           value={state.username}\r\n                           onChange={handleChange}\r\n                    />\r\n                    </div>\r\n                    <div className=\"form-group text-left\">\r\n                    <label htmlFor=\"exampleInputPassword1\">Lösenord</label>\r\n                    <input type=\"password\"\r\n                           className=\"form-control\"\r\n                           id=\"password\"\r\n                           placeholder=\"Lösenord\"\r\n                           value={state.password}\r\n                           onChange={handleChange}\r\n                    />\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                    </div>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-dark-blue\"\r\n                        onClick={handleSubmitClick}\r\n                    >\r\n                        Logga in\r\n                    </button>\r\n                </form>\r\n                <div className=\"alert alert-success mt-2\" style={{display: state.successMessage ? 'block' : 'none' }} role=\"alert\">\r\n                    {state.successMessage}\r\n                </div>\r\n            </div>\r\n            {wishlistUpdated.length > 0 && (\r\n                <div className=\"card col-md-6 col-sm-12 login-card p-3 mt-2 hv-center\">\r\n                    <p className=\"mt-2\">Senast uppdaterade önskelistor</p>\r\n                    <hr className=\"mt-0\" />\r\n                    {wishlistUpdated.length > 0 && wishlistUpdated.map((p, index) => (\r\n                        <div className=\"row\" key={index}>\r\n                            <div className=\"col-3\">{p.name}</div>\r\n                            <div className=\"col-9\">{p.lastUpdated}</div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginForm);","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nfunction Textarea(props) {\r\n    const [wishlistText, setWishlistText] = useState(props.wishlistText ? props.wishlistText : \"\");\r\n\r\n    return(\r\n        <Form>\r\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n            <Form.Label>{props.name ? `${props.name}s önskelista` : \"Din önskelista\"}</Form.Label>\r\n            <Form.Control as=\"textarea\" rows={4} value={wishlistText} onChange={(e) => setWishlistText(e.target.value)} disabled={props.disabled} />\r\n          </Form.Group>\r\n          {!props.disabled && (\r\n              props.isSaving ? (\r\n                  <div className=\"alert alert-success mt-2\" style={{display: props.isSaving ? 'block' : 'none' }} role=\"alert\">\r\n                      Sparar...\r\n                  </div>\r\n              ) :\r\n                  <Button\r\n                      className=\"btn-dark-blue\"\r\n                      type=\"button\"\r\n                      onClick={props.onSaveWishlist ? () => props.onSaveWishlist(wishlistText) : undefined}\r\n                   >\r\n                      Spara\r\n                  </Button>\r\n          )}\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Textarea","import React,{ useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { ACCESS_TOKEN_NAME, API_BASE_URL } from '../../constants/apiContants';\r\nimport axios from 'axios'\r\nimport Textarea from '../Textarea/Textarea';\r\n\r\nfunction Home(props) {\r\n    const [currentUser , setCurrentUser] = useState(undefined);\r\n    const [secretSanta , setSecretSanta] = useState(undefined);\r\n    const [isSaving, setIsSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getCurrentUser();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    function redirectToLogin() {\r\n        props.history.push('/');\r\n    }\r\n\r\n    const getCurrentUser = () => {\r\n        axios.get(API_BASE_URL + \"/619beb2f62ed886f91531862/latest\")\r\n            .then(function (response) {\r\n                if(response.status !== 200){\r\n                    redirectToLogin()\r\n                }\r\n\r\n                let user = response.data.find(x => x.id === parseInt(localStorage.getItem(ACCESS_TOKEN_NAME)));\r\n\r\n                if(!user) {\r\n                    redirectToLogin()\r\n                }\r\n                else {\r\n                    setCurrentUser(user);\r\n\r\n                    if (user.secretsanta !== undefined && user.secretsanta !== null) {\r\n                        setSecretSanta(response.data.find(x => x.id === user.secretsanta));\r\n                    }\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                redirectToLogin()\r\n            });\r\n    }\r\n\r\n    const getUsers = async () => {\r\n        return await axios.get(API_BASE_URL + \"/619beb2f62ed886f91531862/latest\")\r\n            .then(function (response) {\r\n                return response.data;\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const updateUserData = (updatedUsers) => {\r\n        axios.put(API_BASE_URL + \"/619beb2f62ed886f91531862\", updatedUsers)\r\n            .then(function (response) {\r\n                setIsSaving(false);\r\n                getCurrentUser();\r\n            })\r\n            .catch(function (error) {\r\n                setIsSaving(false);\r\n            });\r\n    }\r\n\r\n    const saveWishlist = async (text) => {\r\n        setIsSaving(true);\r\n        const oldUsers = await getUsers();\r\n        const updatedUsers = oldUsers.map(p =>\r\n            p.id === parseInt(localStorage.getItem(ACCESS_TOKEN_NAME))\r\n            ?  { ...p, wishlist: text, lastUpdated: new Date()}\r\n            : p\r\n        );\r\n\r\n        updateUserData(updatedUsers);\r\n    }\r\n\r\n    const handleRandomize = async () => {\r\n        setIsSaving(true);\r\n        const users = await getUsers();\r\n\r\n        while (true) {\r\n            let {successful, updatedUsers} = randomize(users);\r\n\r\n            if (successful) {\r\n                updateUserData(updatedUsers);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    const randomize = (users) => {\r\n        let usersCopy = [...users];\r\n\r\n        var arr1 = usersCopy.slice(),\r\n            arr2 = usersCopy.slice();\r\n\r\n        arr1.sort(function() { return 0.5 - Math.random();});\r\n        arr2.sort(function() { return 0.5 - Math.random();});\r\n\r\n        while (arr1.length) {\r\n            var user1 = arr1.pop(),\r\n                user2 = arr2[0] === user1 ? arr2.pop() : arr2.shift();\r\n\r\n            if (user1.partner === user2.partner) {\r\n                return {successful: false, updatedUsers: users};\r\n            }\r\n\r\n            users = users.map(p =>\r\n                p.id === user1.id\r\n                ?  { ...p, secretsanta: user2.id }\r\n                : p\r\n            );\r\n        }\r\n\r\n        return {successful: true, updatedUsers: users};\r\n    }\r\n\r\n    return(\r\n        <div className=\"card col-md-6 col-sm-12 mt-4 p-3\">\r\n            <p className=\"mt-2\">Skriv minst en sak du önskar dig</p>\r\n            {currentUser && (\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <Textarea\r\n                            wishlistText={currentUser.wishlist}\r\n                            onSaveWishlist={(text) => saveWishlist(text)}\r\n                            isSaving={isSaving}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {secretSanta && (\r\n                <div className=\"row mt-4\">\r\n                    <div className=\"col-12\">\r\n                        <Textarea\r\n                            name={secretSanta.name}\r\n                            wishlistText={secretSanta.wishlist}\r\n                            disabled\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {localStorage.getItem(ACCESS_TOKEN_NAME) === \"0\" && (\r\n                <button\r\n                    className=\"btn btn-dark-blue mr-3\"\r\n                    onClick={() => {if(window.confirm('Vill du slumpa secret santa?')){handleRandomize()};}}>Assign secret santa\r\n                </button>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Home);","import React from 'react';\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { ACCESS_TOKEN_NAME } from '../constants/apiContants';\r\nfunction PrivateRoute({ children, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n          localStorage.getItem(ACCESS_TOKEN_NAME) ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\nexport default PrivateRoute;","import React, { useState, useEffect } from 'react';\r\nimport './AlertComponent.css';\r\nfunction AlertComponent(props) {\r\n    const [modalDisplay, toggleDisplay] = useState('none');\r\n    const openModal = () => {\r\n        toggleDisplay('block');     \r\n    }\r\n    const closeModal = () => {\r\n        toggleDisplay('none'); \r\n        props.hideError(null);\r\n    }\r\n    useEffect(() => {\r\n        if(props.errorMessage !== null) {\r\n            openModal()\r\n        } else {\r\n            closeModal()\r\n        }\r\n    });\r\n    \r\n    return(\r\n        <div \r\n            className={\"col-md-6 col-sm-12 alert alert-danger alert-dismissable mt-4\"}\r\n            role=\"alert\" \r\n            id=\"alertPopUp\"\r\n            style={{ display: modalDisplay }}\r\n        >\r\n            <div className=\"d-flex alertMessage\">\r\n                <span>{props.errorMessage}</span>\r\n                <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={() => closeModal()}>\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n} \r\n\r\nexport default AlertComponent","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport LoginForm from './components/LoginForm/LoginForm';\r\nimport Home from './components/Home/Home';\r\nimport PrivateRoute from './utils/PrivateRoute';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport AlertComponent from './components/AlertComponent/AlertComponent';\r\nfunction App() {\r\n  const [title, updateTitle] = useState(null);\r\n  const [errorMessage, updateErrorMessage] = useState(null);\r\n  return (\r\n    <Router basename=\"/2021\">\r\n    <div className=\"App\">\r\n      <Header title={title}/>\r\n        <div className=\"container flex-column\">\r\n          <Switch>\r\n            <Route path=\"/\" exact={true}>\r\n              <LoginForm showError={updateErrorMessage} updateTitle={updateTitle}/>\r\n            </Route>\r\n            <Route path=\"/login\">\r\n              <LoginForm showError={updateErrorMessage} updateTitle={updateTitle}/>\r\n            </Route>\r\n            <PrivateRoute path=\"/home\">\r\n              <Home/>\r\n            </PrivateRoute>\r\n          </Switch>\r\n          <AlertComponent errorMessage={errorMessage} hideError={updateErrorMessage}/>\r\n        </div>\r\n    </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}