{"version":3,"sources":["constants/apiContants.js","components/Header/Header.js","components/LoginForm/LoginForm.js","components/Textarea/Textarea.js","components/Home/Home.js","utils/PrivateRoute.js","components/AlertComponent/AlertComponent.js","App.js","serviceWorker.js","index.js"],"names":["ACCESS_TOKEN_NAME","withRouter","props","react_default","a","createElement","className","localStorage","getItem","location","pathname","onClick","removeItem","history","push","renderLogout","_useState","useState","username","password","successMessage","_useState2","Object","slicedToArray","state","setState","handleChange","e","_e$target","target","id","value","prevState","objectSpread","defineProperty","redirectToHome","updateTitle","htmlFor","type","aria-describedby","placeholder","onChange","preventDefault","payload","axios","get","then","response","status","user","data","find","x","trim","toLowerCase","showError","token","setItem","catch","error","console","log","style","display","role","Textarea","wishlistText","setWishlistText","Form","Group","controlId","Label","name","concat","Control","as","rows","disabled","isSaving","Button","onSaveWishlist","undefined","currentUser","setCurrentUser","_useState3","_useState4","secretSanta","setSecretSanta","_useState5","_useState6","setIsSaving","redirectToLogin","useEffect","getCurrentUser","parseInt","secretsanta","getUsers","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","sent","stop","apply","this","arguments","saveWishlist","_ref2","_callee2","text","oldUsers","updatedUsers","_context2","map","p","wishlist","put","_x","Fragment","Textarea_Textarea","PrivateRoute","children","rest","objectWithoutProperties","react_router","assign","render","to","from","AlertComponent","modalDisplay","toggleDisplay","closeModal","hideError","errorMessage","aria-label","aria-hidden","App","title","updateErrorMessage","react_router_dom","basename","Header_Header","path","exact","components_LoginForm_LoginForm","utils_PrivateRoute","Home_Home","components_AlertComponent_AlertComponent","Boolean","window","hostname","match","ReactDOM","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4c0ce655.chunk.js","sourcesContent":["/*export const API_BASE_URL = process.env.REACT_APP_SERVER_URL;*/\r\nexport const API_BASE_URL = 'https://secret-santa-json-server.herokuapp.com';\r\nexport const ACCESS_TOKEN_NAME = 'login_access_token';","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { ACCESS_TOKEN_NAME } from '../../constants/apiContants';\r\nfunction Header(props) {\r\n    const capitalize = (s) => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n/*    let title = capitalize(props.location.pathname.substring(1,props.location.pathname.length))\r\n    if(props.location.pathname === '/') {\r\n        title = 'Login'\r\n    }\r\n    else if(title.toLowerCase() === 'home') {\r\n        title = 'Secret Santa';\r\n    }*/\r\n\r\n    function renderLogout() {\r\n        if(props.location.pathname === '/home'){\r\n            return(\r\n                <div className=\"ml-auto\">\r\n                    <button className=\"btn btn-danger\" onClick={() => handleLogout()}>Logout</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    function handleLogout() {\r\n        localStorage.removeItem(ACCESS_TOKEN_NAME)\r\n        props.history.push('/login')\r\n    }\r\n    return(\r\n        <nav className=\"navbar navbar-dark bg-dark-blue\">\r\n            <div className=\"row col-12 d-flex text-white\">\r\n                <span className=\"h3\">\r\n                    {localStorage.getItem(ACCESS_TOKEN_NAME) ? \"Secret Santa\" : \"Login\"}\r\n                </span>\r\n                {renderLogout()}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default withRouter(Header);","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport './LoginForm.css';\r\nimport {API_BASE_URL, ACCESS_TOKEN_NAME} from '../../constants/apiContants';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction LoginForm(props) {\r\n    const [state , setState] = useState({\r\n        username : \"\",\r\n        password : \"\",\r\n        successMessage: null\r\n    })\r\n    const handleChange = (e) => {\r\n        const {id , value} = e.target\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id] : value\r\n        }))\r\n    }\r\n\r\n    const handleSubmitClick = (e) => {\r\n        e.preventDefault();\r\n        const payload={\r\n            \"username\":state.username,\r\n            \"password\":state.password,\r\n        }\r\n\r\n        //axios.get(API_BASE_URL+'/auth')\r\n        axios.get(\"https://api.jsonbin.io/b/619bead00ddbee6f8b104f1b\")\r\n            .then(function (response) {\r\n                if(response.status === 200){\r\n                    let user = response.data.find(x => x.username === payload.username.trim().toLowerCase());\r\n\r\n                    if (!user) {\r\n                        props.showError(\"Username does not exists\");\r\n                    }\r\n                    else if (user && user.password !== payload.password) {\r\n                        props.showError(\"Username and password do not match\");\r\n                    }\r\n                    else {\r\n                        setState(prevState => ({\r\n                            ...prevState,\r\n                            'successMessage' : 'Login successful. Redirecting to home page..'\r\n                        }))\r\n                        let token = user.id;\r\n                        localStorage.setItem(ACCESS_TOKEN_NAME,token);\r\n                        redirectToHome();\r\n                        props.showError(null)\r\n                    }\r\n                }\r\n                else{\r\n                    props.showError(\"Something went wrong\");\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n    const redirectToHome = () => {\r\n        props.updateTitle('Home')\r\n        props.history.push('/home');\r\n    }\r\n    return(\r\n        <div className=\"card col-md-6 col-sm-12 login-card p-3 mt-2 hv-center\">\r\n            <form>\r\n                <div className=\"form-group text-left\">\r\n                <label htmlFor=\"exampleInputUsername1\">Användarnamn</label>\r\n                <input type=\"username\"\r\n                       className=\"form-control\"\r\n                       id=\"username\"\r\n                       aria-describedby=\"usernameHelp\"\r\n                       placeholder=\"Skriv användarnamn\"\r\n                       value={state.username}\r\n                       onChange={handleChange}\r\n                />\r\n                </div>\r\n                <div className=\"form-group text-left\">\r\n                <label htmlFor=\"exampleInputPassword1\">Lösenord</label>\r\n                <input type=\"password\"\r\n                       className=\"form-control\"\r\n                       id=\"password\"\r\n                       placeholder=\"Lösenord\"\r\n                       value={state.password}\r\n                       onChange={handleChange}\r\n                />\r\n                </div>\r\n                <div className=\"form-check\">\r\n                </div>\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-dark-blue\"\r\n                    onClick={handleSubmitClick}\r\n                >\r\n                    Logga in\r\n                </button>\r\n            </form>\r\n            <div className=\"alert alert-success mt-2\" style={{display: state.successMessage ? 'block' : 'none' }} role=\"alert\">\r\n                {state.successMessage}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginForm);","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nfunction Textarea(props) {\r\n    const [wishlistText, setWishlistText] = useState(props.wishlistText ? props.wishlistText : \"\");\r\n\r\n    return(\r\n        <Form>\r\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n            <Form.Label>{props.name ? `${props.name}s önskelista` : \"Din önskelista\"}</Form.Label>\r\n            <Form.Control as=\"textarea\" rows={4} value={wishlistText} onChange={(e) => setWishlistText(e.target.value)} disabled={props.disabled} />\r\n          </Form.Group>\r\n          {!props.disabled && (\r\n              props.isSaving ? (\r\n                  <div className=\"alert alert-success mt-2\" style={{display: props.isSaving ? 'block' : 'none' }} role=\"alert\">\r\n                      Sparar...\r\n                  </div>\r\n              ) :\r\n                  <Button\r\n                      className=\"btn-dark-blue\"\r\n                      type=\"button\"\r\n                      onClick={props.onSaveWishlist ? () => props.onSaveWishlist(wishlistText) : undefined}\r\n                   >\r\n                      Spara\r\n                  </Button>\r\n          )}\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Textarea","import React,{ useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { ACCESS_TOKEN_NAME, API_BASE_URL } from '../../constants/apiContants';\r\nimport axios from 'axios'\r\nimport Textarea from '../Textarea/Textarea';\r\n\r\nfunction Home(props) {\r\n    const [currentUser , setCurrentUser] = useState(undefined);\r\n    const [secretSanta , setSecretSanta] = useState(undefined);\r\n    const [isSaving, setIsSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n      getCurrentUser();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    function redirectToLogin() {\r\n        props.history.push('/login');\r\n    }\r\n\r\n    const getCurrentUser = () => {\r\n        axios.get(\"https://api.jsonbin.io/b/619beb2f62ed886f91531862/latest\")\r\n        //axios.get(API_BASE_URL+'/users/' + localStorage.getItem(ACCESS_TOKEN_NAME))\r\n            .then(function (response) {\r\n                console.log(response);\r\n                if(response.status !== 200){\r\n                    redirectToLogin()\r\n                }\r\n\r\n                let user = response.data.find(x => x.id === parseInt(localStorage.getItem(ACCESS_TOKEN_NAME)));\r\n\r\n                if(!user) {\r\n                    redirectToLogin()\r\n                }\r\n                else {\r\n                    setCurrentUser(user);\r\n\r\n                    if (user.secretsanta !== undefined && user.secretsanta !== null) {\r\n                        setSecretSanta(response.data.find(x => x.id === user.secretsanta));\r\n                    }\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                redirectToLogin()\r\n            });\r\n    }\r\n\r\n    const getUsers = async () => {\r\n        return await axios.get(\"https://api.jsonbin.io/b/619beb2f62ed886f91531862/latest\")\r\n        //axios.get(API_BASE_URL+'/users/' + localStorage.getItem(ACCESS_TOKEN_NAME))\r\n            .then(function (response) {\r\n                return response.data;\r\n            })\r\n            .catch(function (error) {\r\n                redirectToLogin()\r\n            });\r\n    }\r\n\r\n    const saveWishlist = async (text) => {\r\n        setIsSaving(true);\r\n        const oldUsers = await getUsers();\r\n        const updatedUsers = oldUsers.map(p =>\r\n            p.id === parseInt(localStorage.getItem(ACCESS_TOKEN_NAME))\r\n            ?  { ...p, wishlist: text }\r\n            : p\r\n        );\r\n\r\n        axios.put(\"https://api.jsonbin.io/b/619beb2f62ed886f91531862\", updatedUsers)\r\n        //axios.put(API_BASE_URL+'/users/' + localStorage.getItem(ACCESS_TOKEN_NAME), updated)\r\n            .then(function (response) {\r\n                getCurrentUser();\r\n                setIsSaving(false);\r\n            })\r\n            .catch(function (error) {\r\n                setIsSaving(false);\r\n            });\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <p className=\"mt-2\">Skriv minst en sak du önskar dig</p>\r\n            {currentUser && (\r\n                <div className=\"row mt-4\">\r\n                    <div className=\"mt-2 col-md-6 col-sm-12\">\r\n                        <Textarea\r\n                            wishlistText={currentUser.wishlist}\r\n                            onSaveWishlist={(text) => saveWishlist(text)}\r\n                            isSaving={isSaving}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {secretSanta && (\r\n                <div className=\"row mt-4\">\r\n                    <div className=\"col-md-6 col-sm-12\">\r\n                        <Textarea\r\n                            name={secretSanta.name}\r\n                            wishlistText={secretSanta.wishlist}\r\n                            disabled\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Home);","import React from 'react';\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { ACCESS_TOKEN_NAME } from '../constants/apiContants';\r\nfunction PrivateRoute({ children, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n          localStorage.getItem(ACCESS_TOKEN_NAME) ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\nexport default PrivateRoute;","import React, { useState, useEffect } from 'react';\r\nimport './AlertComponent.css';\r\nfunction AlertComponent(props) {\r\n    const [modalDisplay, toggleDisplay] = useState('none');\r\n    const openModal = () => {\r\n        toggleDisplay('block');     \r\n    }\r\n    const closeModal = () => {\r\n        toggleDisplay('none'); \r\n        props.hideError(null);\r\n    }\r\n    useEffect(() => {\r\n        if(props.errorMessage !== null) {\r\n            openModal()\r\n        } else {\r\n            closeModal()\r\n        }\r\n    });\r\n    \r\n    return(\r\n        <div \r\n            className={\"col-md-6 col-sm-12 alert alert-danger alert-dismissable mt-4\"}\r\n            role=\"alert\" \r\n            id=\"alertPopUp\"\r\n            style={{ display: modalDisplay }}\r\n        >\r\n            <div className=\"d-flex alertMessage\">\r\n                <span>{props.errorMessage}</span>\r\n                <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={() => closeModal()}>\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n} \r\n\r\nexport default AlertComponent","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport LoginForm from './components/LoginForm/LoginForm';\r\nimport Home from './components/Home/Home';\r\nimport PrivateRoute from './utils/PrivateRoute';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport AlertComponent from './components/AlertComponent/AlertComponent';\r\nfunction App() {\r\n  const [title, updateTitle] = useState(null);\r\n  const [errorMessage, updateErrorMessage] = useState(null);\r\n  return (\r\n    <Router basename=\"/2021\">\r\n    <div className=\"App\">\r\n      <Header title={title}/>\r\n        <div className=\"container flex-column\">\r\n          <Switch>\r\n            <Route path=\"/\" exact={true}>\r\n              <LoginForm showError={updateErrorMessage} updateTitle={updateTitle}/>\r\n            </Route>\r\n            <Route path=\"/login\">\r\n              <LoginForm showError={updateErrorMessage} updateTitle={updateTitle}/>\r\n            </Route>\r\n            <PrivateRoute path=\"/home\">\r\n              <Home/>\r\n            </PrivateRoute>\r\n          </Switch>\r\n          <AlertComponent errorMessage={errorMessage} hideError={updateErrorMessage}/>\r\n        </div>\r\n    </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}