{"version":3,"sources":["constants/apiContants.js","components/Header/Header.js","components/LoginForm/LoginForm.js","components/Textarea/Textarea.js","components/Home/Home.js","utils/PrivateRoute.js","components/AlertComponent/AlertComponent.js","App.js","serviceWorker.js","index.js"],"names":["API_BASE_URL","ACCESS_TOKEN_NAME","withRouter","props","_handleRandomize","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","users","_randomize","successful","updatedUsers","wrap","_context2","prev","next","getUsers","sent","randomize","axios","put","then","response","catch","error","console","log","abrupt","stop","apply","this","arguments","usersCopy","toConsumableArray","arr1","slice","arr2","sort","Math","random","length","user1","pop","user2","shift","partner","map","p","id","objectSpread","secretsanta","_ref","_callee","_context","get","data","react_default","createElement","className","localStorage","getItem","onClick","window","confirm","handleRandomize","location","pathname","removeItem","history","push","renderLogout","_useState","useState","username","password","successMessage","_useState2","slicedToArray","state","setState","handleChange","e","_e$target","target","value","prevState","defineProperty","redirectToHome","updateTitle","htmlFor","type","aria-describedby","placeholder","onChange","preventDefault","payload","status","user","find","x","trim","toLowerCase","showError","token","setItem","style","display","role","Textarea","wishlistText","setWishlistText","Form","Group","controlId","Label","name","concat","Control","as","rows","disabled","isSaving","Button","onSaveWishlist","undefined","currentUser","setCurrentUser","_useState3","_useState4","secretSanta","setSecretSanta","_useState5","_useState6","setIsSaving","redirectToLogin","useEffect","getCurrentUser","parseInt","saveWishlist","_ref2","text","oldUsers","wishlist","_x","Textarea_Textarea","PrivateRoute","children","rest","objectWithoutProperties","react_router","assign","render","to","from","AlertComponent","modalDisplay","toggleDisplay","closeModal","hideError","errorMessage","aria-label","aria-hidden","App","title","updateErrorMessage","react_router_dom","basename","Header_Header","path","exact","components_LoginForm_LoginForm","utils_PrivateRoute","Home_Home","components_AlertComponent_AlertComponent","Boolean","hostname","match","ReactDOM","StrictMode","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5957c847.chunk.js","sourcesContent":["/*export const API_BASE_URL = process.env.REACT_APP_SERVER_URL;*/\r\nexport const API_BASE_URL = 'https://api.jsonbin.io/b';\r\nexport const ACCESS_TOKEN_NAME = 'login_access_token';","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from 'axios'\r\nimport { ACCESS_TOKEN_NAME, API_BASE_URL } from '../../constants/apiContants';\r\n\r\nfunction Header(props) {\r\n    const capitalize = (s) => {\r\n        if (typeof s !== 'string') return ''\r\n        return s.charAt(0).toUpperCase() + s.slice(1)\r\n    }\r\n\r\n    function renderRandom() {\r\n        return(\r\n            <button\r\n                className=\"btn btn-light-blue mr-3\"\r\n                onClick={() => {if(window.confirm('Vill du slumpa secret santa?')){handleRandomize()};}}>Assign secret santa\r\n            </button>\r\n        )\r\n    }\r\n\r\n    function renderLogout() {\r\n        if(props.location.pathname === '/home'){\r\n            return(\r\n                <button className=\"btn btn-danger\" onClick={() => handleLogout()}>Logga ut</button>\r\n            )\r\n        }\r\n    }\r\n\r\n    function handleLogout() {\r\n        localStorage.removeItem(ACCESS_TOKEN_NAME)\r\n        props.history.push('/login')\r\n    }\r\n\r\n    async function handleRandomize() {\r\n        const users = await getUsers();\r\n\r\n        while (true) {\r\n            let {successful, updatedUsers} = randomize(users);\r\n\r\n            if (successful) {\r\n                axios.put(API_BASE_URL + \"/619beb2f62ed886f91531862\", updatedUsers)\r\n                    .then(function (response) {\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                    });\r\n\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    function randomize(users) {\r\n        let usersCopy = [...users];\r\n\r\n        var arr1 = usersCopy.slice(),\r\n            arr2 = usersCopy.slice();\r\n\r\n        arr1.sort(function() { return 0.5 - Math.random();});\r\n        arr2.sort(function() { return 0.5 - Math.random();});\r\n\r\n        while (arr1.length) {\r\n            var user1 = arr1.pop(),\r\n                user2 = arr2[0] == user1 ? arr2.pop() : arr2.shift();\r\n\r\n            if (user1.partner === user2.partner) {\r\n                return {successful: false, updatedUsers: users};\r\n            }\r\n\r\n            users = users.map(p =>\r\n                p.id === user1.id\r\n                ?  { ...p, secretsanta: user2.id }\r\n                : p\r\n            );\r\n        }\r\n\r\n        return {successful: true, updatedUsers: users};\r\n    }\r\n\r\n    const getUsers = async () => {\r\n        return await axios.get(API_BASE_URL + \"/619beb2f62ed886f91531862/latest\")\r\n            .then(function (response) {\r\n                return response.data;\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    return(\r\n        <nav className=\"navbar navbar-dark bg-dark-blue\">\r\n            <div className=\"row col-12 d-flex text-white\">\r\n                <span className=\"h3\">\r\n                    {localStorage.getItem(ACCESS_TOKEN_NAME) ? \"Secret Santa\" : \"Login\"}\r\n                </span>\r\n                <div className=\"ml-auto\">\r\n                    {localStorage.getItem(ACCESS_TOKEN_NAME) && localStorage.getItem(ACCESS_TOKEN_NAME) === \"0\" && renderRandom()}\r\n                    {renderLogout()}\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default withRouter(Header);","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport './LoginForm.css';\r\nimport { ACCESS_TOKEN_NAME, API_BASE_URL } from '../../constants/apiContants';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction LoginForm(props) {\r\n    const [state , setState] = useState({\r\n        username : \"\",\r\n        password : \"\",\r\n        successMessage: null\r\n    })\r\n    const handleChange = (e) => {\r\n        const {id , value} = e.target\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id] : value\r\n        }))\r\n    }\r\n\r\n    const handleSubmitClick = (e) => {\r\n        e.preventDefault();\r\n        const payload={\r\n            \"username\":state.username,\r\n            \"password\":state.password,\r\n        }\r\n\r\n        axios.get(API_BASE_URL + \"/619bead00ddbee6f8b104f1b\")\r\n            .then(function (response) {\r\n                if(response.status === 200){\r\n                    let user = response.data.find(x => x.username === payload.username.trim().toLowerCase());\r\n\r\n                    if (!user) {\r\n                        props.showError(\"Username does not exists\");\r\n                    }\r\n                    else if (user && user.password !== payload.password) {\r\n                        props.showError(\"Username and password do not match\");\r\n                    }\r\n                    else {\r\n                        setState(prevState => ({\r\n                            ...prevState,\r\n                            'successMessage' : 'Login successful. Redirecting to home page..'\r\n                        }))\r\n                        let token = user.id;\r\n                        localStorage.setItem(ACCESS_TOKEN_NAME,token);\r\n                        redirectToHome();\r\n                        props.showError(null)\r\n                    }\r\n                }\r\n                else{\r\n                    props.showError(\"Something went wrong\");\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n    const redirectToHome = () => {\r\n        props.updateTitle('Home')\r\n        props.history.push('/home');\r\n    }\r\n    return(\r\n        <div className=\"card col-md-6 col-sm-12 login-card p-3 mt-2 hv-center\">\r\n            <form>\r\n                <div className=\"form-group text-left\">\r\n                <label htmlFor=\"exampleInputUsername1\">Användarnamn</label>\r\n                <input type=\"username\"\r\n                       className=\"form-control\"\r\n                       id=\"username\"\r\n                       aria-describedby=\"usernameHelp\"\r\n                       placeholder=\"Skriv användarnamn\"\r\n                       value={state.username}\r\n                       onChange={handleChange}\r\n                />\r\n                </div>\r\n                <div className=\"form-group text-left\">\r\n                <label htmlFor=\"exampleInputPassword1\">Lösenord</label>\r\n                <input type=\"password\"\r\n                       className=\"form-control\"\r\n                       id=\"password\"\r\n                       placeholder=\"Lösenord\"\r\n                       value={state.password}\r\n                       onChange={handleChange}\r\n                />\r\n                </div>\r\n                <div className=\"form-check\">\r\n                </div>\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-dark-blue\"\r\n                    onClick={handleSubmitClick}\r\n                >\r\n                    Logga in\r\n                </button>\r\n            </form>\r\n            <div className=\"alert alert-success mt-2\" style={{display: state.successMessage ? 'block' : 'none' }} role=\"alert\">\r\n                {state.successMessage}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(LoginForm);","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nfunction Textarea(props) {\r\n    const [wishlistText, setWishlistText] = useState(props.wishlistText ? props.wishlistText : \"\");\r\n\r\n    return(\r\n        <Form>\r\n          <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n            <Form.Label>{props.name ? `${props.name}s önskelista` : \"Din önskelista\"}</Form.Label>\r\n            <Form.Control as=\"textarea\" rows={4} value={wishlistText} onChange={(e) => setWishlistText(e.target.value)} disabled={props.disabled} />\r\n          </Form.Group>\r\n          {!props.disabled && (\r\n              props.isSaving ? (\r\n                  <div className=\"alert alert-success mt-2\" style={{display: props.isSaving ? 'block' : 'none' }} role=\"alert\">\r\n                      Sparar...\r\n                  </div>\r\n              ) :\r\n                  <Button\r\n                      className=\"btn-dark-blue\"\r\n                      type=\"button\"\r\n                      onClick={props.onSaveWishlist ? () => props.onSaveWishlist(wishlistText) : undefined}\r\n                   >\r\n                      Spara\r\n                  </Button>\r\n          )}\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default Textarea","import React,{ useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { ACCESS_TOKEN_NAME, API_BASE_URL } from '../../constants/apiContants';\r\nimport axios from 'axios'\r\nimport Textarea from '../Textarea/Textarea';\r\n\r\nfunction Home(props) {\r\n    const [currentUser , setCurrentUser] = useState(undefined);\r\n    const [secretSanta , setSecretSanta] = useState(undefined);\r\n    const [isSaving, setIsSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n      getCurrentUser();\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    function redirectToLogin() {\r\n        props.history.push('/login');\r\n    }\r\n\r\n    const getCurrentUser = () => {\r\n        axios.get(API_BASE_URL + \"/619beb2f62ed886f91531862/latest\")\r\n            .then(function (response) {\r\n                if(response.status !== 200){\r\n                    redirectToLogin()\r\n                }\r\n\r\n                let user = response.data.find(x => x.id === parseInt(localStorage.getItem(ACCESS_TOKEN_NAME)));\r\n\r\n                if(!user) {\r\n                    redirectToLogin()\r\n                }\r\n                else {\r\n                    setCurrentUser(user);\r\n\r\n                    if (user.secretsanta !== undefined && user.secretsanta !== null) {\r\n                        setSecretSanta(response.data.find(x => x.id === user.secretsanta));\r\n                    }\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                redirectToLogin()\r\n            });\r\n    }\r\n\r\n    const getUsers = async () => {\r\n        return await axios.get(API_BASE_URL + \"/619beb2f62ed886f91531862/latest\")\r\n            .then(function (response) {\r\n                return response.data;\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    const saveWishlist = async (text) => {\r\n        setIsSaving(true);\r\n        const oldUsers = await getUsers();\r\n        const updatedUsers = oldUsers.map(p =>\r\n            p.id === parseInt(localStorage.getItem(ACCESS_TOKEN_NAME))\r\n            ?  { ...p, wishlist: text }\r\n            : p\r\n        );\r\n\r\n        axios.put(API_BASE_URL + \"/619beb2f62ed886f91531862\", updatedUsers)\r\n            .then(function (response) {\r\n                getCurrentUser();\r\n                setIsSaving(false);\r\n            })\r\n            .catch(function (error) {\r\n                setIsSaving(false);\r\n            });\r\n    }\r\n\r\n    return(\r\n        <div className=\"card col-md-6 col-sm-12 mt-4 p-3\">\r\n            <p className=\"mt-2\">Skriv minst en sak du önskar dig</p>\r\n            {currentUser && (\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <Textarea\r\n                            wishlistText={currentUser.wishlist}\r\n                            onSaveWishlist={(text) => saveWishlist(text)}\r\n                            isSaving={isSaving}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {secretSanta && (\r\n                <div className=\"row mt-4\">\r\n                    <div className=\"col-12\">\r\n                        <Textarea\r\n                            name={secretSanta.name}\r\n                            wishlistText={secretSanta.wishlist}\r\n                            disabled\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Home);","import React from 'react';\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { ACCESS_TOKEN_NAME } from '../constants/apiContants';\r\nfunction PrivateRoute({ children, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={({ location }) =>\r\n          localStorage.getItem(ACCESS_TOKEN_NAME) ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: location }\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\nexport default PrivateRoute;","import React, { useState, useEffect } from 'react';\r\nimport './AlertComponent.css';\r\nfunction AlertComponent(props) {\r\n    const [modalDisplay, toggleDisplay] = useState('none');\r\n    const openModal = () => {\r\n        toggleDisplay('block');     \r\n    }\r\n    const closeModal = () => {\r\n        toggleDisplay('none'); \r\n        props.hideError(null);\r\n    }\r\n    useEffect(() => {\r\n        if(props.errorMessage !== null) {\r\n            openModal()\r\n        } else {\r\n            closeModal()\r\n        }\r\n    });\r\n    \r\n    return(\r\n        <div \r\n            className={\"col-md-6 col-sm-12 alert alert-danger alert-dismissable mt-4\"}\r\n            role=\"alert\" \r\n            id=\"alertPopUp\"\r\n            style={{ display: modalDisplay }}\r\n        >\r\n            <div className=\"d-flex alertMessage\">\r\n                <span>{props.errorMessage}</span>\r\n                <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={() => closeModal()}>\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n} \r\n\r\nexport default AlertComponent","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport LoginForm from './components/LoginForm/LoginForm';\r\nimport Home from './components/Home/Home';\r\nimport PrivateRoute from './utils/PrivateRoute';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport AlertComponent from './components/AlertComponent/AlertComponent';\r\nfunction App() {\r\n  const [title, updateTitle] = useState(null);\r\n  const [errorMessage, updateErrorMessage] = useState(null);\r\n  return (\r\n    <Router basename=\"/2021\">\r\n    <div className=\"App\">\r\n      <Header title={title}/>\r\n        <div className=\"container flex-column\">\r\n          <Switch>\r\n            <Route path=\"/\" exact={true}>\r\n              <LoginForm showError={updateErrorMessage} updateTitle={updateTitle}/>\r\n            </Route>\r\n            <Route path=\"/login\">\r\n              <LoginForm showError={updateErrorMessage} updateTitle={updateTitle}/>\r\n            </Route>\r\n            <PrivateRoute path=\"/home\">\r\n              <Home/>\r\n            </PrivateRoute>\r\n          </Switch>\r\n          <AlertComponent errorMessage={errorMessage} hideError={updateErrorMessage}/>\r\n        </div>\r\n    </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}